{"version":3,"file":"static/js/6004.c5facb20.chunk.js","mappings":"sPAkFA,UAhEuB,WACnB,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EAER,GAAqEE,EAAAA,EAAAA,MAArE,eAAOC,EAAP,KAA6BC,EAA7B,KAAoCC,EAApC,KAAmDC,EAAnD,KAKMC,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,MAAOF,EAAAA,KAAaG,SAASZ,EAAE,uBAAuBW,MAAMX,EAAE,gCAWtE,OACI,UAAC,IAAD,CACIa,aACI,eAAGC,UAAU,aAAb,UACKd,EAAE,YACH,SAAC,KAAD,CAAMe,GAAG,cAAcD,UAAU,gCAAjC,SACKd,EAAE,eALnB,WAUI,eAAIc,UAAU,eAAd,SAA8Bd,EAAE,qBAChC,cAAGc,UAAU,uBAAb,SACKd,EAAE,oGAGNI,IAAUC,IACP,SAAC,IAAD,CAAOW,QAAQ,SAASF,UAAU,OAAlC,SACKV,IAGRD,GAAwBE,IACrB,SAAC,IAAD,CAAOW,QAAQ,UAAUF,UAAU,OAAnC,SACKX,KAIT,UAAC,IAAD,CAAwBc,SA/Bf,SAACC,GACdZ,EAAgB,CAAEK,MAAOO,EAAQ,SA8BeC,SAAUZ,EAAgBa,cAAe,GAArF,WACI,SAAC,IAAD,CACIC,KAAK,QACLC,KAAK,QACLC,MAAOvB,EAAE,SACTwB,YAAaxB,EAAE,SACfyB,eAAgB,UAEpB,gBAAKX,UAAU,gCAAf,UACI,SAAC,IAAD,CAAQO,KAAK,SAAb,SAAuBrB,EAAE","sources":["pages/auth/ForgetPassword.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Alert, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\n\n// hooks\nimport { useForgotPassword } from '../../hooks/auth';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/form';\n\nimport AuthLayout from './AuthLayout';\n\ntype UserData = {\n    email: string;\n};\n\nconst ForgetPassword = () => {\n    const { t } = useTranslation();\n\n    const [resetPasswordSuccess, error, passwordReset, forgotPassword] = useForgotPassword();\n\n    /*\n    form validation schema\n    */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            email: yup.string().required(t('Please enter Email')).email(t('Please enter valid Email')),\n        })\n    );\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData: UserData) => {\n        forgotPassword!({ email: formData['email'] });\n    };\n\n    return (\n        <AuthLayout\n            bottomLinks={\n                <p className=\"text-muted\">\n                    {t('Back to')}\n                    <Link to=\"/auth/login\" className=\"text-primary fw-semibold ms-1\">\n                        {t('Log In')}\n                    </Link>\n                </p>\n            }\n        >\n            <h6 className=\"h5 mb-0 mt-3\">{t('Reset Password')}</h6>\n            <p className=\"text-muted mt-1 mb-4\">\n                {t(\"Enter your email address and we'll send you an email with instructions to reset your password.\")}\n            </p>\n\n            {error && !passwordReset && (\n                <Alert variant=\"danger\" className=\"mb-3\">\n                    {error}\n                </Alert>\n            )}\n            {resetPasswordSuccess && passwordReset && (\n                <Alert variant=\"success\" className=\"mb-3\">\n                    {resetPasswordSuccess}\n                </Alert>\n            )}\n\n            <VerticalForm<UserData> onSubmit={onSubmit} resolver={schemaResolver} defaultValues={{}}>\n                <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    label={t('Email')}\n                    placeholder={t('Email')}\n                    containerClass={'mb-3'}\n                />\n                <div className=\"mb-0 text-center  pt-3 d-grid\">\n                    <Button type=\"submit\">{t('Submit')}</Button>\n                </div>\n            </VerticalForm>\n        </AuthLayout>\n    );\n};\n\nexport default ForgetPassword;\n"],"names":["t","useTranslation","useForgotPassword","resetPasswordSuccess","error","passwordReset","forgotPassword","schemaResolver","yupResolver","yup","shape","email","required","bottomLinks","className","to","variant","onSubmit","formData","resolver","defaultValues","type","name","label","placeholder","containerClass"],"sourceRoot":""}