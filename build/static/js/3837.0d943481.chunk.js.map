{"version":3,"file":"static/js/3837.0d943481.chunk.js","mappings":"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","sources":["pages/docs/Colors/Colors.tsx","pages/docs/Colors/Backgrounds.tsx","pages/docs/Colors/TextColors.tsx","pages/docs/Colors/index.tsx","pages/docs/layout/SideNavLeft/menu.ts","pages/docs/layout/SideNavLeft/index.tsx","pages/docs/layout/SideNavRight.tsx","pages/docs/layout/index.tsx"],"sourcesContent":["import { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from '../types';\n\ntype ColorsProps = {\n    variants: Variant[];\n};\n\nconst Colors = ({ variants }: ColorsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title as=\"h4\" className=\"my-0\">\n                    Colors\n                </Card.Title>\n                <Card.Text className=\"sub-header\">\n                    These are primary theme colors.They are used for all the elements including buttons, alerts,\n                    background, etc.\n                </Card.Text>\n                <Row>\n                    {(variants || []).map((color, index) => {\n                        return (\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\n                                <div className={classNames('rounded', 'p-5', 'bg-' + color)}></div>\n                                <h6>{color}</h6>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Colors;\n","import { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from '../types';\n\ntype BackgroundsProps = {\n    variants: Variant[];\n};\n\nconst Backgrounds = ({ variants }: BackgroundsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title as=\"h4\" className=\"my-0\">\n                    Background\n                </Card.Title>\n                <Card.Text className=\"sub-header\">\n                    Use the contexual class to have background with different shades. E.g.{' '}\n                    <code>\n                        .bg-{'{'}primary | secondary | success | danger | info | warning{'}'}\n                    </code>\n                </Card.Text>\n                <Row>\n                    {(variants || []).map((color, index) => {\n                        return (\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\n                                <div className={classNames('rounded', 'p-3', 'mb-3', 'mb-xl-0', 'bg-' + color)}>\n                                    <h5 className=\"text-white\">.bg-{color}</h5>\n                                </div>\n                            </Col>\n                        );\n                    })}\n                </Row>\n                <Card.Text className=\"sub-header mt-4\">\n                    Each color has a translucent shade too. It adds a little transparency. E.g.{' '}\n                    <code>\n                        .bg-soft-{'{'}primary | secondary | success | danger | info | warning{'}'}\n                    </code>\n                </Card.Text>\n                <Row>\n                    {(variants || []).map((color, index) => {\n                        return (\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\n                                <div className={classNames('rounded', 'p-3', 'mb-3', 'mb-xl-0', 'bg-soft-' + color)}>\n                                    <h5 className={classNames('text-' + color, 'my-0')}>.bg-soft-{color}</h5>\n                                </div>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Backgrounds;\n","import { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from '../types';\n\ntype TextColorsProps = {\n    variants: Variant[];\n};\n\nconst TextColors = ({ variants }: TextColorsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title as=\"h4\" className=\"my-0\">\n                    Text Colors\n                </Card.Title>\n                <Card.Text className=\"sub-header\">\n                    Even your text can have the contexual color. E.g.{' '}\n                    <code>\n                        .text-{'{'}primary | secondary | success | danger | info | warning{'}'}\n                    </code>\n                </Card.Text>\n                <Row>\n                    {(variants || []).map((color, index) => {\n                        return (\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\n                                <div className=\"bg-white rounded p-2\"></div>\n                                <h5 className={classNames('text-' + color)}>.text-{color}</h5>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default TextColors;\n","import { Col, Row } from 'react-bootstrap';\n\n// components\nimport DocsLayout from '../layout';\n\nimport Colors from './Colors';\nimport Backgrounds from './Backgrounds';\nimport TextColors from './TextColors';\n\n// types\nimport { Variant } from '../types';\n\nconst variants: Variant[] = ['primary', 'secondary', 'success', 'danger', 'warning', 'info'];\n\nconst ColorsExample = () => {\n    return (\n        <DocsLayout>\n            <Col xl={10} lg={9}>\n                <Row>\n                    <Col xs={12}>\n                        <Colors variants={variants} />\n                        <Backgrounds variants={variants} />\n                        <TextColors variants={variants} />\n                    </Col>\n                </Row>\n            </Col>\n        </DocsLayout>\n    );\n};\n\nexport default ColorsExample;\n","// types\nimport { MenuItem } from 'types';\n\nexport const MENU_ITEMS: MenuItem[] = [\n    {\n        key: 'getting-started',\n        label: 'Getting Started',\n        children: [\n            {\n                key: 'introduction',\n                label: 'Introduction',\n                url: '/docs/introduction',\n            },\n            {\n                key: 'quick-start',\n                label: 'Quick Start',\n                url: '/docs/quick-start',\n            },\n            {\n                key: 'customization',\n                label: 'Customization',\n                url: '/docs/customization',\n            },\n            {\n                key: 'routing',\n                label: 'Routing',\n                url: '/docs/routing',\n            },\n            {\n                key: 'code-spliting',\n                label: 'Code Spliting',\n                url: '/docs/code-spliting',\n            },\n            {\n                key: 'change-log',\n                label: 'Change Log',\n                url: '/docs/change-log',\n            },\n        ],\n    },\n    {\n        key: 'style-guide',\n        label: 'Style Guide',\n        children: [\n            {\n                key: 'colors',\n                label: 'Colors',\n                url: '/docs/colors',\n            },\n            {\n                key: 'typography',\n                label: 'Typography',\n                url: '/docs/typography',\n            },\n        ],\n    },\n    {\n        key: 'components',\n        label: 'Components',\n        children: [\n            {\n                key: 'bootstrap',\n                label: 'Bootstrap',\n                url: '/docs/bootstrap',\n            },\n            {\n                key: 'custom',\n                label: 'Custom',\n                url: '/docs/custom',\n            },\n            {\n                key: 'plugins',\n                label: 'Plugins',\n                url: '/docs/plugins',\n            },\n        ],\n    },\n    {\n        key: 'sections',\n        label: 'Sections',\n        children: [\n            {\n                key: 'navbars',\n                label: 'Navbars',\n                url: '/docs/navbars',\n            },\n            {\n                key: 'heros',\n                label: 'Heros',\n                url: '/docs/heros',\n            },\n        ],\n    },\n];\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n// types\nimport { MenuItem } from 'types';\n\n// constants\nimport { MENU_ITEMS } from './menu';\n\nconst MenuItemWithChildren = ({ item }: { item: MenuItem }) => {\n    return (\n        <>\n            {(item.children || []).map((item, index) => {\n                return (\n                    <Nav.Item key={index.toString()}>\n                        <NavLink\n                            to={item.url!}\n                            className={({ isActive }) =>\n                                isActive ? 'nav-link doc-nav-link active' : 'nav-link doc-nav-link'\n                            }\n                        >\n                            {item.label}\n                        </NavLink>\n                    </Nav.Item>\n                );\n            })}\n        </>\n    );\n};\n\nconst SideNav = () => {\n    return (\n        <div className=\"px-0 px-sm-4 d-none d-lg-block\" id=\"sidenav-left\">\n            {(MENU_ITEMS || []).map((item, index) => {\n                return (\n                    <React.Fragment key={index.toString()}>\n                        <h5 className={index === 0 ? '' : 'mt-4'}>{item.label}</h5>\n                        <Nav className=\"flex-column\">\n                            <MenuItemWithChildren item={item} />\n                        </Nav>\n                    </React.Fragment>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default SideNav;\n","import { Nav } from 'react-bootstrap';\n\n// types\nimport { MenuItem } from 'types';\n\ntype SideNavRightProps = {\n    menuItems: MenuItem[];\n};\n\nconst SideNavRight = ({ menuItems }: SideNavRightProps) => {\n    return (\n        <div className=\"border-left-lg\">\n            <Nav navbarScroll className=\"flex-column\">\n                {(menuItems || []).map((item, index) => {\n                    return (\n                        <Nav.Item key={index.toString()}>\n                            <Nav.Link href={'#' + item.key}>{item.label}</Nav.Link>\n                        </Nav.Item>\n                    );\n                })}\n            </Nav>\n        </div>\n    );\n};\n\nexport default SideNavRight;\n","import { Container, Col, Row } from 'react-bootstrap';\n\n// components\nimport { Navbar3 } from 'components/navbars';\n// types\nimport { MenuItem } from 'types';\n\nimport SideNav from './SideNavLeft';\nimport SideNavRight from './SideNavRight';\n\ntype DocsLayoutProps = {\n    children: React.ReactNode;\n    rightMenuItems?: MenuItem[];\n};\n\nconst DocsLayout = ({ children, rightMenuItems }: DocsLayoutProps) => {\n    return (\n        <>\n            <Navbar3 navClass=\"shadow fixed-top navbar-light bg-white\" buttonClass=\"btn-outline-primary btn-sm\" />\n            <div className=\"content py-0 py-sm-4 px-0 px-sm-3 bg-light min-vh-100\">\n                <Container fluid>\n                    <Row>\n                        <Col xs={12} xl={2} md={3} className={rightMenuItems && 'sidenav sidenav-left'}>\n                            <SideNav />\n                        </Col>\n                        {children}\n\n                        {rightMenuItems && (\n                            <Col xs={12} lg={2} xl={2} className=\"d-none d-xl-block px-xl-0 sidenav sidenav-right\">\n                                <SideNavRight menuItems={rightMenuItems} />\n                            </Col>\n                        )}\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default DocsLayout;\n"],"names":["variants","Card","as","className","Row","map","color","index","Col","md","xl","classNames","toString","lg","xs","MENU_ITEMS","key","label","children","url","MenuItemWithChildren","item","Nav","to","isActive","id","menuItems","navbarScroll","href","rightMenuItems","navClass","buttonClass","Container","fluid"],"sourceRoot":""}