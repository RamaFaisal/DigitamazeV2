{"version":3,"file":"static/js/7536.84be5044.chunk.js","mappings":"iSA+GA,UA1Fe,WACX,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACR,GAA8BE,EAAAA,EAAAA,MAA9B,eAAOC,EAAP,KAAaC,EAAb,KAAoBC,EAApB,KAKMC,GAAiBC,EAAAA,EAAAA,GACnBC,EAAAA,KAAaC,MAAM,CACfC,YAAaF,EAAAA,KAAaG,SAASX,EAAE,sBACrCY,MAAOJ,EAAAA,KAAaG,SAASX,EAAE,uBAAuBY,MAAMZ,EAAE,6BAC9Da,SAAUL,EAAAA,KAAaG,SAASX,EAAE,6BAW1C,OACI,gCACKG,IAAQ,SAAC,KAAD,CAAUW,GAAG,gBAAgBC,SAAO,KAC7C,UAAC,IAAD,CACIC,WAAS,EACTC,aACI,eAAGC,UAAU,aAAb,UACKlB,EAAE,6BACH,SAAC,KAAD,CAAMc,GAAG,cAAcI,UAAU,gCAAjC,SACKlB,EAAE,eANnB,WAWI,eAAIkB,UAAU,eAAd,SAA8BlB,EAAE,0BAChC,cAAGkB,UAAU,uBAAb,SACKlB,EAAE,8EAGNI,IACG,SAAC,IAAD,CAAOe,QAAQ,SAASD,UAAU,OAAlC,SACKd,KAIT,UAAC,IAAD,CAAwBgB,SA7BnB,SAACC,GACdhB,EAAQ,CAAEiB,SAAUD,EAAQ,YAAiBT,MAAOS,EAAQ,MAAWR,SAAUQ,EAAQ,YA4BrCE,SAAUjB,EAAgBkB,cAAe,GAArF,WACI,SAAC,IAAD,CACIC,KAAK,OACLC,KAAK,cACLC,MAAO3B,EAAE,aACT4B,YAAa5B,EAAE,aACf6B,eAAgB,UAEpB,SAAC,IAAD,CACIJ,KAAK,QACLC,KAAK,QACLC,MAAO3B,EAAE,SACT4B,YAAa5B,EAAE,SACf6B,eAAgB,UAEpB,SAAC,IAAD,CACIF,MAAO3B,EAAE,YACTyB,KAAK,WACLC,KAAK,WACLE,YAAa5B,EAAE,uBACf6B,eAAgB,UAEpB,gBAAKX,UAAU,0BAAf,UACI,SAAC,IAAD,CAAQO,KAAK,SAAb,SAAuBzB,EAAE,oBAIjC,gBAAKkB,UAAU,mBAAf,UACI,iBAAMA,UAAU,gBAAhB,SAAiClB,EAAE,WAEvC,SAAC,IAAD,WACI,SAAC,IAAD,CAAK8B,GAAI,GAAIZ,UAAU,cAAvB,UACI,UAAC,KAAD,CAAMJ,GAAG,IAAII,UAAU,sBAAvB,WACI,SAAC,IAAD,CAAaa,KAAK,SAASb,UAAU,sBACpClB,EAAE","sources":["pages/auth/SignUp.tsx"],"sourcesContent":["import { Link, Navigate } from 'react-router-dom';\nimport { Button, Row, Col, Alert } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\nimport FeatherIcon from 'feather-icons-react';\n\n// hooks\nimport { useSignup } from '../../hooks/auth';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/form';\n\nimport AuthLayout from './AuthLayout';\n\ntype UserData = {\n    exampleName: string;\n    email: string;\n    password: string;\n};\n\nconst SignUp = () => {\n    const { t } = useTranslation();\n    const [user, error, signup] = useSignup();\n\n    /*\n    form validation schema\n    */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            exampleName: yup.string().required(t('Please enter Name')),\n            email: yup.string().required(t('Please enter Email')).email(t('Please enter valid Email')),\n            password: yup.string().required(t('Please enter Password')),\n        })\n    );\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData: UserData) => {\n        signup!({ fullname: formData['exampleName'], email: formData['email'], password: formData['password'] });\n    };\n\n    return (\n        <>\n            {user && <Navigate to=\"/auth/confirm\" replace />}\n            <AuthLayout\n                hasSlider\n                bottomLinks={\n                    <p className=\"text-muted\">\n                        {t('Already have an account?')}\n                        <Link to=\"/auth/login\" className=\"text-primary fw-semibold ms-1\">\n                            {t('Log In')}\n                        </Link>\n                    </p>\n                }\n            >\n                <h6 className=\"h5 mb-0 mt-3\">{t('Create Your Account')}</h6>\n                <p className=\"text-muted mt-1 mb-4\">\n                    {t(\"Don't have an account? Create your account, it takes less than a minute.\")}\n                </p>\n\n                {error && (\n                    <Alert variant=\"danger\" className=\"mb-3\">\n                        {error}\n                    </Alert>\n                )}\n\n                <VerticalForm<UserData> onSubmit={onSubmit} resolver={schemaResolver} defaultValues={{}}>\n                    <FormInput\n                        type=\"text\"\n                        name=\"exampleName\"\n                        label={t('Your Name')}\n                        placeholder={t('Your Name')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        type=\"email\"\n                        name=\"email\"\n                        label={t('Email')}\n                        placeholder={t('Email')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        label={t('Password')}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder={t('Enter your password')}\n                        containerClass={'mb-3'}\n                    />\n                    <div className=\"mb-0 text-center d-grid\">\n                        <Button type=\"submit\">{t('Register')}</Button>\n                    </div>\n                </VerticalForm>\n\n                <div className=\"py-3 text-center\">\n                    <span className=\"fs-13 fw-bold\">{t('OR')}</span>\n                </div>\n                <Row>\n                    <Col xs={12} className=\"text-center\">\n                        <Link to=\"#\" className=\"btn btn-white w-100\">\n                            <FeatherIcon icon=\"github\" className=\"icon icon-xs me-2\" />\n                            {t('Sign Up with Github')}\n                        </Link>\n                    </Col>\n                </Row>\n            </AuthLayout>\n        </>\n    );\n};\n\nexport default SignUp;\n"],"names":["t","useTranslation","useSignup","user","error","signup","schemaResolver","yupResolver","yup","shape","exampleName","required","email","password","to","replace","hasSlider","bottomLinks","className","variant","onSubmit","formData","fullname","resolver","defaultValues","type","name","label","placeholder","containerClass","xs","icon"],"sourceRoot":""}